#!/bin/zsh

. common.shell

[[ -z $MIRROR ]] && MIRROR="" #mirror.corvix.eu
[[ -z $LOGIFLE ]] && LOGFILE=/opt/egatrop/log/egatrop
[[ -z $ESRC_DIR ]] && ESRC_DIR=/opt/egatrop/src/
[[ -e $EBIN_DIR ]] && EBIN_DIR=/opt/egatrop/

_ename() {
   EFULL=$(basename $EBUILD | sed 's/.ebuild//g')
   ENAME=$(echo $EFULL | awk '{gsub("-"," ");gsub(".ebuild","");print$1}')
   EVERS=$(echo $EFULL | awk '{gsub("-"," ");gsub(".ebuild","");print$2}')
   EREL=$(echo $EFULL | awk '{gsub("-"," ");gsub(".ebuild","");print$3}')
}   

_logo() {
   LOGLEVEL=`expr $LOGLEVEL+1`
   LOG "Egatrop: installing ebuild $EFULL"
   LOGLEVEL=`expr $LOGLEVEL+1`
   LOG "using: esrc=$ESRC_DIR ebin=$EBIN_DIR"
}

_efetch() {
   LOG "uris: $ESRC_URI"
   for uri in $(echo $ESRC_URI); do
      file=${uri##*/}
      [[ -n $MIRROR ]] && uri=$MIRROR/$file
      if [[ ! -e $ESRC_DIR/$file ]]; then 
         LOG "downloading $file from $uri"
         _ wget $uri
      fi
   done
}

_ecalc_md5sums() {
   LOG "calculating md5sums"
   for uri in $(echo $ESRC_URI); do
      file=${uri##*/}
      [[ -n $MIRROR ]] && uri=$MIRROR/$file
      md5sum $file
   done
}

_emd5check() {
   LOG "checking md5sums"
   echo "$EMD5" | md5sum -c || DIE "Wrong md5sum"
}

_epython() {
   LOG "pyhton wrapper"
   cmd=${@/install/install $_PREFIX --force --record=$ECTRL_DIR/$EFULL/lick_my_python.txt}
   _edebug "Lick my python:" $cmd
   _esu python $(echo $cmd)
}


_esu() {
   _ sudo "$@"
}

_ename
_logo

cd $ESRC_DIR
