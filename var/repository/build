#!/bin/zsh
find pool -type f -exec rm {} \;
find dists -type f -exec rm {} \;

# copy .deb files
cp ../deb-package/*deb pool

# make directory strucutre
#cd dists/testing/meta/
#for a in binary-arm binary-i386 binary-alpha; do 
#   ln -s binary-all $a
#done
#cd ../../../

_create_release() {
dd=$1
cat << eof >$dd/Release
Origin: corvix
Label: corvix
Suite: testing
Version: 0.0.1
Codename: corvix
Architectures: i386  
Components: meta
Description: Corvix 1st testing
eof
apt-ftparchive release $dd >> $dd/Release
[[ -e $dd/Release.gpg ]] && rm $dd/Release.gpg
gpg -u corvix.eu -abs -o $dd/Release.gpg $dd/Release
}   

_create_packages() {
dd=$1   
apt-ftparchive packages pool |gzip > $dd/Packages.gz
}

_create_packages dists/testing/meta/binary-all
_create_packages dists/testing/meta/binary-i386

#_create_release dists/testing/meta/binary-all
#_create_release dists/testing/meta/binary-i386
_create_release dists/testing

#cd dists/testing
#apt-ftparchive packages . |gzip >Packages.gz
# create & sign release file
#apt-ftparchive release . > ./Release
#[[ -e Release.gpg ]] && rm Release.gpg 
#gpg -u corvix.eu -abs -o Release.gpg Release
